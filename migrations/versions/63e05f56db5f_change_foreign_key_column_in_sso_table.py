"""Change foreign key column in SSO table

Revision ID: 63e05f56db5f
Revises: d3b684b143d2
Create Date: 2023-03-09 10:10:42.230268

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '63e05f56db5f'
down_revision = 'd3b684b143d2'
branch_labels = None
depends_on = None

from sqlmodel import select
from sqlalchemy.exc import NoResultFound
from sqlalchemy.orm.exc import StaleDataError

from airt_service.db.models import get_session_with_context

def update_username_with_id_for_existing_records():
    """Update username with user id for existing records"""
    with get_session_with_context() as session:
        try:
            records = session.exec('SELECT sso.id as sso_id, user.id as user_id FROM sso INNER JOIN user ON sso.username = user.username')
        except NoResultFound:
            return
        for record in records:
            try:
                record = session.exec(f"UPDATE sso SET user_id={record['user_id']} WHERE id={record['sso_id']}")
                session.commit()
            except StaleDataError:
                session.rollback()

def update_user_id_with_username_for_existing_records():
    """Update user id with username for existing records"""
    with get_session_with_context() as session:
        try:
            records = session.exec('SELECT sso.id, user.username FROM sso INNER JOIN user ON sso.user_id = user.id')
        except NoResultFound:
            return
        for record in records:
            try:
                record = session.exec(f"UPDATE sso SET username='{record['username']}' WHERE id={record['id']}")
                session.commit()
            except StaleDataError:
                session.rollback()
    
def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('sso', sa.Column('user_id', sa.Integer(), nullable=True))
    update_username_with_id_for_existing_records()
    
    op.drop_constraint('sso_ibfk_1', 'sso', type_='foreignkey')
    op.create_foreign_key('fk_sso_user_id_user_id', 'sso', 'user', ['user_id'], ['id'])
    op.drop_column('sso', 'username')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('sso', sa.Column('username', mysql.VARCHAR(length=255), nullable=True))
    update_user_id_with_username_for_existing_records()
    
    op.drop_constraint('fk_sso_user_id_user_id', 'sso', type_='foreignkey')
    op.create_foreign_key('sso_ibfk_1', 'sso', 'user', ['username'], ['username'])
    op.drop_column('sso', 'user_id')
    # ### end Alembic commands ###
